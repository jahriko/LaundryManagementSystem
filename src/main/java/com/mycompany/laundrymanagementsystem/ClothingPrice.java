/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.laundrymanagementsystem;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import javax.swing.JOptionPane;
import static lms.gen.Tables.LAUNDRY_PRICE;
import javax.swing.table.DefaultTableModel;
import org.jooq.Result;
import org.jooq.Record;
import org.jooq.Record5;
import org.jooq.exception.DataAccessException;
import static org.jooq.impl.DSL.*;
/**
 *
 * @author Jericho Opsima
 */
public class ClothingPrice extends javax.swing.JDialog {

    /**
     * Creates new form AddLaundryItem
     */
    public ClothingPrice(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        populateTable();
        setLocationRelativeTo(null);
    }
    
    private void populateTable() {        
        DefaultTableModel table = (DefaultTableModel) clothingPriceTable.getModel();
        table.setRowCount(0);
        
        Result<Record5<String, BigDecimal, BigDecimal, BigDecimal, BigDecimal>> res = Database.context().select(
                LAUNDRY_PRICE.LAUNDRY_TYPE,
                sum(
                    choose(LAUNDRY_PRICE.SERVICE_NAME)
                        .when("Laundry", LAUNDRY_PRICE.PRICE)
                        .otherwise((float)0)
                ).as("LAUNDRY"), 
                sum(
                    choose(LAUNDRY_PRICE.SERVICE_NAME)
                        .when("Laundry and Ironing", LAUNDRY_PRICE.PRICE)
                        .otherwise((float)0)
                ).as("LAUNDRY AND IRONING"),
                sum(
                    choose(LAUNDRY_PRICE.SERVICE_NAME)
                        .when("Ironing", LAUNDRY_PRICE.PRICE)
                        .otherwise((float)0)
                ).as("IRONING"),
                sum(
                    choose(LAUNDRY_PRICE.SERVICE_NAME)
                        .when("Drywash", LAUNDRY_PRICE.PRICE)
                        .otherwise((float)0)
                ).as("DRYWASH"))
                .from(LAUNDRY_PRICE)
                .groupBy(LAUNDRY_PRICE.LAUNDRY_TYPE)
                .fetch();
        
        var rowData = new Object[5];
        
  
        
//        for (Record r : res) {
//            rowData[0] = r.get(LAUNDRY_PRICE.LAUNDRY_TYPE);
//            rowData[1] = BigDecimal.valueOf((r.getValue("LAUNDRY")).setScale(2, RoundingMode.HALF_DOWN).floatValue();
//            rowData[2] = r.getValue("LAUNDRY AND IRONING");
//            rowData[3] = r.getValue("IRONING");
//            rowData[4] = BigDecimal.valueOf((Float)r.getValue("DRYWASH")).setScale(2, RoundingMode.HALF_DOWN).floatValue();
//            table.addRow(rowData);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deleteBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        clothingTypeField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        clothingPriceTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        laundryPriceField = new javax.swing.JTextField();
        laundryIroningPriceField = new javax.swing.JTextField();
        ironingPriceField = new javax.swing.JTextField();
        drywashPriceField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        deleteBtn.setText("Delete Item");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Clothing Type");

        addBtn.setText("Add Item");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        clothingPriceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Clothing Type", "Laundry", "Ironing", "Laundry & Ironing", "Drywash"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clothingPriceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clothingPriceTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(clothingPriceTable);

        jLabel2.setText("Ironing");

        jLabel3.setText("Laundry");

        jLabel6.setText("Laundry & Ironing");

        jLabel7.setText("Drywash");

        updateBtn.setText("Update Item");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addGap(18, 18, 18)
                        .addComponent(updateBtn)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 983, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(19, 19, 19)
                        .addComponent(clothingTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(laundryPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(laundryIroningPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(ironingPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(drywashPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(clothingTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(laundryPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(laundryIroningPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ironingPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(drywashPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(deleteBtn)
                    .addComponent(updateBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed

        float getLaundryPrice = Float.parseFloat(laundryPriceField.getText());
        float getLaundryIroningPrice = Float.parseFloat(laundryIroningPriceField.getText());
        float getIroningPrice = Float.parseFloat(ironingPriceField.getText());
        float getDrywashPrice = Float.parseFloat(drywashPriceField.getText());
        
        if (laundryPriceField.getText().isBlank() 
                || laundryIroningPriceField.getText().isBlank() 
                || ironingPriceField.getText().isBlank() 
                || drywashPriceField.getText().isBlank()) 
        {
            JOptionPane.showMessageDialog(this, "Price should not be less than or equal to 0", "Inane warning", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (clothingTypeField.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Clothing Type should not be left blank.", "Inane warning", JOptionPane.ERROR_MESSAGE);
            return;
        } 

        var isClothingTypeExist = Database.context()
                .fetchExists(selectFrom(LAUNDRY_PRICE)
                        .where(LAUNDRY_PRICE.LAUNDRY_TYPE.eq(clothingTypeField.getText())));  

        if (!isClothingTypeExist) {
            Database.context().insertInto(LAUNDRY_PRICE,
                    LAUNDRY_PRICE.LAUNDRY_TYPE,
                    LAUNDRY_PRICE.SERVICE_NAME,
                    LAUNDRY_PRICE.PRICE)
                    .values(clothingTypeField.getText(), "Laundry", getLaundryPrice)
                    .values(clothingTypeField.getText(), "Laundry and Ironing", getLaundryIroningPrice)
                    .values(clothingTypeField.getText(), "Ironing", getIroningPrice)
                    .values(clothingTypeField.getText(), "Drywash", getDrywashPrice)
                    .execute();

//            Database.context().batch(Database.context().insertInto(
//                    LAUNDRY_PRICE, 
//                    LAUNDRY_PRICE.LAUNDRY_TYPE, 
//                    LAUNDRY_PRICE.SERVICE_NAME, 
//                    LAUNDRY_PRICE.PRICE)
//                    .values(null, null, (Float) null )
//                    .bind(clothingTypeField.getText(), "Laundry, getLaundryPrice)
//                    .bind(clothingTypeField.getText(), "Laundry and Ironing", getLaundryIroningPrice)
//                    .bind(clothingTypeField.getText(), "Ironing", getIroningPrice)
//                    .bind(clothingTypeField.getText(), "Drywash", getDrywashPrice)
//                    .execute());
        
            populateTable();
        }
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        if (clothingPriceTable.getSelectedRow() > -1) {
            String getClothingType = clothingPriceTable.getValueAt(clothingPriceTable.getSelectedRow(), 0).toString();
            
            try {
                Database.context().delete(LAUNDRY_PRICE).where(LAUNDRY_PRICE.LAUNDRY_TYPE.eq(getClothingType)).execute();
            } catch (DataAccessException e) {
                JOptionPane.showMessageDialog(this,
                        "Unable to delete this row.",
                        "Inane warning",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            clothingTypeField.setText("");
            laundryIroningPriceField.setText("");
            ironingPriceField.setText("");
            drywashPriceField.setText("");
            
            populateTable();
            
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void clothingPriceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clothingPriceTableMouseClicked
        DefaultTableModel clothingPriceTableModel = (DefaultTableModel) clothingPriceTable.getModel();
        
        int getSelectedRowIndex = clothingPriceTable.getSelectedRow();
        
        clothingTypeField.setText(clothingPriceTableModel.getValueAt(getSelectedRowIndex, 0).toString());
        laundryPriceField.setText(clothingPriceTableModel.getValueAt(getSelectedRowIndex, 1).toString());
        laundryIroningPriceField.setText(clothingPriceTableModel.getValueAt(getSelectedRowIndex, 2).toString());
        ironingPriceField.setText(clothingPriceTableModel.getValueAt(getSelectedRowIndex, 3).toString());
        drywashPriceField.setText(clothingPriceTableModel.getValueAt(getSelectedRowIndex, 4).toString());
    }//GEN-LAST:event_clothingPriceTableMouseClicked

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        String clothingType = clothingTypeField.getText();
        String laundryPrice = laundryPriceField.getText();
        String laundryIroningPrice = laundryIroningPriceField.getText();
        String ironingPrice = ironingPriceField.getText();
        String drywashPrice = drywashPriceField.getText();
    }//GEN-LAST:event_updateBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClothingPrice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClothingPrice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClothingPrice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClothingPrice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ClothingPrice dialog = new ClothingPrice(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTable clothingPriceTable;
    private javax.swing.JTextField clothingTypeField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField drywashPriceField;
    private javax.swing.JTextField ironingPriceField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField laundryIroningPriceField;
    private javax.swing.JTextField laundryPriceField;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
